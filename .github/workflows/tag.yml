name: Build on Tag

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

jobs:
  security-checks:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Build Container
        uses: drewbernetes/container-security-action@v0.0.2
        if: github.event_name != 'pull_request'
        id: build-and-scan
        with:
          image-repo: ghcr.io
          repo-username: ${{ github.repository_owner }}
          repo-password: ${{ secrets.GITHUB_TOKEN }}
          image-name: dogkat
          image-tag: ${{ github.ref_name }}
          check-severity: CRITICAL
          trivyignore-from-s3: true
          s3-endpoint: "https://api.s3.hudson-viles.uk"
          s3-access-key: ${{secrets.S3_ACCESS_KEY}}
          s3-secret-key: ${{secrets.S3_SECRET_KEY}}
          s3-bucket: "trivyignores"
          s3-path: "dogkat"
          fail-build: false
          add-latest-tag: true
          publish-image: true
          cosign-private-key: ${{secrets.COSIGN_KEY}}
          cosign-password: ${{secrets.COSIGN_PASSWORD}}
          cosign-tlog: true
          dockerfile-path: docker

  release:
    name: Create Release
    runs-on: 'ubuntu-22.04'
    needs: security-checks
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v3
        with:
          go-version: '1.22.1'

      - name: Get OS and arch info
        run: |
          GOARCH=amd64
          GOOS=linux
          BINARY_NAME=${{github.repository}}-$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV

      - name: Build
        run: |
          CGO_ENABLED=0 go build -o "$BINARY_NAME" cmd/dogkat/main.go

      - name: Release Notes
        run: |
          git log $(git describe HEAD~ --tags --abbrev=0)..HEAD --pretty='format:* %h %s - %an <%ae>' --no-merges >> ".github/RELEASE-TEMPLATE.md"

      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        with:
          body_path: ".github/RELEASE-TEMPLATE.md"
          draft: false
          files: ${{env.BINARY_NAME}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          skip_existing: true
