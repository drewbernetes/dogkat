name: Validate on Pull Request

on:
  workflow_dispatch:
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:

  ## Linting is broken: https://github.com/helm/chart-testing/issues/169
  lint-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v3

      - uses: actions/setup-python@v4

      - name: Install chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run lint
        run: ct lint --all --validate-maintainers=false --config .github/ct.yaml

  lint-chart-docs:
    runs-on: ubuntu-latest
    needs: lint-chart
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run helm-docs
        run: .github/helm-docs.sh

  kubeconform-chart:
    runs-on: ubuntu-latest
    needs:
      - lint-chart-docs
    strategy:
      matrix:
        k8s:
          # from https://github.com/yannh/kubernetes-json-schema
          - v1.29.9
          - v1.30.6
          - v1.31.2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run kubeconform
        env:
          KUBERNETES_VERSION: ${{ matrix.k8s }}
        run: .github/kubeconform.sh

  lint-golang:
    name: Lint files
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v3
        with:
          go-version: '1.23.1'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          skip-cache: true
          args: --timeout=3m --skip-dirs=charts

  test-golang:
    name: Run tests
    runs-on: ubuntu-24.04
    needs: lint-golang
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v3
        with:
          go-version: '1.23.1'
      - run: go test -v -cover ./...

  security-checks:
    runs-on: ubuntu-24.04
    needs: test-golang
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Build Local Container
        uses: drewbernetes/container-security-action@v0.1.0
        if: github.event_name != 'pull_request'
        id: build-and-scan
        with:
          image-repo: ghcr.io
          repo-username: ${{ github.repository_owner }}
          repo-password: ${{ secrets.GITHUB_TOKEN }}
          image-name: dogkat
          image-tag: ${{ github.ref_name }}
          check-severity: CRITICAL
          grypeignore-from-s3: true
          s3-endpoint: "https://api.s3.hudson-viles.uk"
          s3-access-key: ${{secrets.S3_ACCESS_KEY}}
          s3-secret-key: ${{secrets.S3_SECRET_KEY}}
          s3-bucket: "grypeignores"
          s3-path: "dogkat.yaml"
          add-latest-tag: false
          publish-image: false
          cosign-private-key: ${{secrets.COSIGN_KEY}}
          cosign-password: ${{secrets.COSIGN_PASSWORD}}
          cosign-tlog: false
          dockerfile-path: docker
          github-token: ${{ secrets.GITHUB_TOKEN }}
