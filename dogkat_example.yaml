# The chart version can be defined here
chart:
  version: 0.0.0
# Enable to generate metrics and send to a prometheus push gateway
metrics:
  enabled: false
  pushGatewayURI: http://prometheus-push-gateway.prometheus:9091
# Core test settings - this will test that a basic web application with:
# * Deployments & StatefulSets using affinity/anti-affinity
# * PDBs, Secrets, ConfigMap
# * Secrets
# * ConfigMaps
# * Volumes
# It will also test node scaling works by scaling the nginx deployment out to the value provided.
core:
  enabled: false
  cpu: 1
  memory: 1Gi
  storageClassName: "cinder"
  scaleTo: 7
  nginx:
    image:
      repo: cgr.dev/chainguard/nginx
      tag: latest # 1.25.4
  nginxExporter:
    image:
      repo: registry.infra.poc.dev.nscale.com/docker-cache/nginx/nginx-prometheus-exporter@sha256
      tag: d710e0ff2505a7037dd21e47eae07025010c0de08a6247d1a704824823becfd0 # 1.1.0
  php:
    image:
      repo: registry.infra.poc.dev.nscale.com/docker-cache/drewviles/php-pdo@sha256
      tag: 27bacb42ac9bd8dc4b1d49cac40763eba0fa18b9ebaa4f6792383fe5ec27eded # v1.2.0
  postgres:
    image:
      repo: postgres@sha256
      tag: 49fd8c13fbd0eb92572df9884ca41882a036beac0f12e520274be85e7e7806e9  # 16.2-alpine
# This will deploy the core resources along with an Ingress to confirm LoadBalancing services work.
# This will require CertManager and ExternalDNS to be configured - DogKat does not deploy these.
ingress:
  enabled: false
  ingressClassName: nginx
  host: "dogkat-testing.example.com"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  tls:
    enabled: false
    host: "dogkat-testing.example.com"
    secretName: "dogkat-ingress-secret"
# This will deploy a basic Nvidia vector add pod to ensure the GPU is working correctly.
gpu:
  enabled: false
  numberOfGPUs: 1
#  nodeLabelSelectors:
#    nvidia.com/gpu.present: "true"
#    topology.kubernetes.io/node-pool: "gpu"
